{
 "cells": [
  {
   "cell_type": "code",
   "execution_count": 1,
   "id": "04d9206f-fa4d-4d03-b3a8-42ee1a13b220",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "<class 'int'>\n",
      "<class 'int'>\n",
      "<class 'int'>\n"
     ]
    }
   ],
   "source": [
    "#Type integer\n",
    "a = 1\n",
    "b = -17\n",
    "c = 100\n",
    "\n",
    "print(type(a))\n",
    "print(type(b))\n",
    "print(type(c))"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 2,
   "id": "9ed330ac-5cf0-4f86-b8c8-e9085fd0d77c",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "<class 'float'>\n",
      "<class 'float'>\n",
      "<class 'float'>\n"
     ]
    }
   ],
   "source": [
    "#Type float\n",
    "x = 3.14\n",
    "y = -0.175\n",
    "z = 2.05\n",
    "\n",
    "print(type(x))\n",
    "print(type(y))\n",
    "print(type(z))"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 3,
   "id": "13453d63-b4ee-4efd-a673-17edf20a4e37",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "<class 'complex'>\n",
      "<class 'complex'>\n",
      "3.0\n",
      "2.0\n"
     ]
    }
   ],
   "source": [
    "#Type complex\n",
    "s1 = 3 + 2j\n",
    "s2 = -2.5j\n",
    "\n",
    "print(type(s1))\n",
    "print(type(s2))\n",
    "print(s1.real) #menampilkan bilangan real\n",
    "print(s1.imag) #menampilkan bilangan imajiner"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 4,
   "id": "14fafd75-5f83-45cc-bb03-a50a56cf31a5",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "3\n",
      "-17.0\n",
      "(-0.175+0j)\n"
     ]
    }
   ],
   "source": [
    "#Konversi Tipe Data Numerik\n",
    "\n",
    "#Konversi ke integer\n",
    "x = int(3.14) \n",
    "print(x)\n",
    "\n",
    "#Konversi ke float\n",
    "b = float(-17)\n",
    "print(b)\n",
    "\n",
    "#Konversi ke complex\n",
    "y =complex(-0.175)\n",
    "print(y)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 5,
   "id": "07710597-f587-47ac-866f-58fabfa43fc8",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "21\n",
      "9\n",
      "90\n",
      "2.5\n",
      "2\n",
      "3\n",
      "11390625\n"
     ]
    }
   ],
   "source": [
    "#Operasi Aritmatika\n",
    "a = 15\n",
    "b = 6\n",
    "print(a + b)  #penjumlahan\n",
    "print(a - b)  #pengurangan \n",
    "print(a * b)  #perkalian \n",
    "print(a / b)  #pembagian\n",
    "print(a // b) #untuk pembagian bilangan bulat\n",
    "print(a % b)  #modulus\n",
    "print(a ** b) #eksponen"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 6,
   "id": "50132075-e708-4f98-8b59-bb4d2d1d04d2",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "2.0\n",
      "6.283185307179586\n",
      "1.0\n"
     ]
    }
   ],
   "source": [
    "#Modul math\n",
    "import math\n",
    "a = 4\n",
    "b = 2\n",
    "c = 0\n",
    "print(math.sqrt(a))    # akar variabel a = 4\n",
    "print(math.pi*(b)) #perkalian variabel b = 2 dengan pi = 3.14\n",
    "print(math.cos(c))  #cosinus variabel c = 0"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 7,
   "id": "6defd475-de93-410d-8e6c-2ec9fcc538fe",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "(1.600485180440241+1.2496210676876531j)\n",
      "(22.979085577886128+14.744805188558727j)\n"
     ]
    }
   ],
   "source": [
    "#Modul cmath\n",
    "import cmath\n",
    "z = 1 + 4j\n",
    "print(cmath.sqrt(z)) #akar variabel z\n",
    "print(cmath.sin(z)) #sinus variabel z"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "14504562-9a21-478f-be19-9a0b3e89d772",
   "metadata": {},
   "outputs": [],
   "source": []
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "Python 3 (ipykernel)",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.13.5"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 5
}
